#!/bin/sh -e

export DESTDIR="$1"

for p in *.patch; do
    patch -p1 < "$p"
done

sed '/UNZIP/d' toolkit/moz.configure > _
mv -f _ toolkit/moz.configure

# Remove upper limit on psutil for those encountering build errors when using
# python-psutil from community.
sed 's/psutil>=5\.4\.2,<=5\.8\.0/psutil>=5\.4\.2/g' python/sites/mach.txt > _
mv -f _ python/sites/mach.txt

# Detect what the current linker is.
case "$(readlink "$(command -v ld)")" in
    ld.bfd) ld="bfd";;
    *lld) ld="lld";;
    *) ld="other";;
esac

# For a full list of patches, head to:
# https://gitlab.com/librewolf-community/browser/source/-/tree/main/patches
librewolf_patch_dir=common/patches/

# Generate below list with this command:
#curl -s https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=librewolf \
#    | grep -v '#'  \
#    | grep '${_patches_dir}' \
#    | cut -d'/' -f2-

patches="
mozilla-kde_after_unity.patch
sed-patches/disable-pocket.patch
sed-patches/allow-searchengines-non-esr.patch
sed-patches/stop-undesired-requests.patch
context-menu.patch
urlbarprovider-interventions.patch
allow-JXL-in-non-nightly-browser.patch
mozilla_dirs.patch
dbus_name.patch
allow-ubo-private-mode.patch
custom-ubo-assets-bootstrap-location.patch
faster-package-multi-locale.patch
ui-patches/pref-naming.patch
ui-patches/remap-links.patch
ui-patches/hide-default-browser.patch
ui-patches/lw-logo-devtools.patch
ui-patches/privacy-preferences.patch
ui-patches/remove-branding-urlbar.patch
ui-patches/remove-cfrprefs.patch
ui-patches/remove-organization-policy-banner.patch
ui-patches/remove-snippets-from-home.patch
ui-patches/website-appearance-ui-rfp.patch
ui-patches/handlers.patch
librewolf-pref-pane.patch
ui-patches/firefox-view.patch
librewolf-prefs.patch
disable-data-reporting-at-compile-time.patch
hide-passwordmgr.patch
"

for patch in $patches; do
    echo "[PATCH] appling $patch"
    patch -Np1 < "${librewolf_patch_dir}$patch"
done

rm -f common/source_files/mozconfig
cp -r common/source_files/* .

sed "s/ccache_stats = None/return None/" \
    python/mozbuild/mozbuild/configure/check_debug_ranges.py >_
mv -f _ python/mozbuild/mozbuild/configure/check_debug_ranges.py

# If using libc++, CXXSTDLIB needs to be set manually.
case $("$CC" -print-file-name=libc++.so) in */*)
    export CXXSTDLIB=c++
esac

export CFLAGS="$CFLAGS -w"
export CXXFLAGS="$CXXFLAGS -w"

# Instruct the compiler to trim absolute paths in resulting binaries and instead
# change them to relative paths ($PWD/... ./...).
export RUSTFLAGS="$RUSTFLAGS --remap-path-prefix=$PWD=."

export LDFLAGS="$LDFLAGS -Wl,-rpath=/usr/lib/firefox,--enable-new-dtags"
export RUSTFLAGS="$RUSTFLAGS -Cdebuginfo=0"
export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=system
export MOZ_DEBUG_FLAGS=-g0
export MOZBUILD_STATE_PATH="$PWD/state"
export MOZ_NOSPAM=1

cat > .mozconfig << EOF
ac_add_options --prefix=/usr
ac_add_options --libdir=/usr/lib
ac_add_options --enable-strip
ac_add_options --enable-release
ac_add_options --enable-rust-simd
ac_add_options --enable-audio-backends=alsa
ac_add_options --enable-install-strip
ac_add_options --enable-official-branding
ac_add_options --enable-application=browser
ac_add_options --enable-optimize="${CFLAGS:-} -w"
ac_add_options --with-system-ffi
ac_add_options --with-system-jpeg
ac_add_options --with-system-libvpx
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-pixman
ac_add_options --with-system-png
ac_add_options --with-system-webp
ac_add_options --with-system-zlib
ac_add_options --without-wasm-sandboxed-libraries
ac_add_options --disable-eme
ac_add_options --disable-dbus
ac_add_options --enable-linker="$ld"
ac_add_options --disable-tests
ac_add_options --disable-vtune
ac_add_options --disable-updater
ac_add_options --disable-jemalloc
ac_add_options --disable-elf-hack
ac_add_options --disable-callgrind
ac_add_options --disable-profiling
ac_add_options --disable-necko-wifi
ac_add_options --disable-crashreporter
ac_add_options --disable-accessibility
ac_add_options --disable-debug
ac_add_options --disable-debug-symbols
ac_add_options --disable-parental-controls
ac_add_options --disable-system-extension-dirs

ac_add_options --with-app-name=librewolf
ac_add_options --with-app-basename=Librewolf
ac_add_options --with-branding=browser/branding/librewolf
ac_add_options --with-distribution-id=io.gitlab.librewolf-community
EOF

./mach build
./mach install

mkdir -p "$1/usr/lib/librewolf/"
cp -r settings/* "$1/usr/lib/librewolf/"

# Remove a lot of uneeded "stuff".
rm -rf \
    "$1/usr/include" \
    "$1/usr/lib/librewolf-devel" \
    "$1/usr/share/idl"
